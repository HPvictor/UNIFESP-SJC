INICIANDO COMPILAÇÃO: teste.cminus
	4: Palavra Reservada: int
	4: ID: vet
	4: [
	4: Numero: 10
	4: ]
	4: ;
	6: Palavra Reservada: int
	6: ID: minloc
	6: (
	6: Palavra Reservada: int
	6: ID: a
	6: [
	6: ]
	6: ,
	6: Palavra Reservada: int
	6: ID: low
	6: ,
	6: Palavra Reservada: int
	6: ID: high
	6: )
	7: {
	7: Palavra Reservada: int
	7: ID: i
	7: ;
	7: Palavra Reservada: int
	7: ID: x
	7: ;
	7: Palavra Reservada: int
	7: ID: k
	7: ;
	8: ID: k
	8: Simbolo: =
	8: ID: low
	8: ;
	9: ID: x
	9: Simbolo: =
	9: ID: a
	9: [
	9: ID: low
	9: ]
	9: ;
	10: ID: i
	10: Simbolo: =
	10: ID: low
	10: +
	10: Numero: 1
	10: ;
	11: Palavra Reservada: while
	11: (
	11: ID: i
	11: <
	11: ID: high
	11: )
	11: {
	12: Palavra Reservada: if
	12: (
	12: ID: a
	12: [
	12: ID: i
	12: ]
	12: <
	12: ID: x
	12: )
	12: {
	13: ID: x
	13: Simbolo: =
	13: ID: a
	13: [
	13: ID: i
	13: ]
	13: ;
	14: ID: k
	14: Simbolo: =
	14: ID: i
	14: ;
	15: }
	16: ID: i
	16: Simbolo: =
	16: ID: i
	16: +
	16: Numero: 1
	16: ;
	17: }
	18: Palavra Reservada: return
	18: ID: k
	18: ;
	19: }
	21: Palavra Reservada: void
	21: ID: sort
	21: (
	21: Palavra Reservada: int
	21: ID: a
	21: [
	21: ]
	21: ,
	21: Palavra Reservada: int
	21: ID: low
	21: ,
	21: Palavra Reservada: int
	21: ID: high
	21: )
	22: {
	22: Palavra Reservada: int
	22: ID: i
	22: ;
	22: Palavra Reservada: int
	22: ID: k
	22: ;
	23: ID: i
	23: Simbolo: =
	23: ID: low
	23: ;
	24: Palavra Reservada: while
	24: (
	24: ID: i
	24: <
	24: ID: high
	24: -
	24: Numero: 1
	24: )
	24: {
	25: Palavra Reservada: int
	25: ID: t
	25: ;
	26: ID: k
	26: Simbolo: =
	26: ID: minloc
	26: (
	26: ID: a
	26: ,
	26: ID: i
	26: ,
	26: ID: high
	26: )
	26: ;
	27: ID: t
	27: Simbolo: =
	27: ID: a
	27: [
	27: ID: k
	27: ]
	27: ;
	28: ID: a
	28: [
	28: ID: k
	28: ]
	28: Simbolo: =
	28: ID: a
	28: [
	28: ID: i
	28: ]
	28: ;
	29: ID: a
	29: [
	29: ID: i
	29: ]
	29: Simbolo: =
	29: ID: t
	29: ;
	30: ID: i
	30: Simbolo: =
	30: ID: i
	30: +
	30: Numero: 1
	30: ;
	31: }
	32: }
	34: Palavra Reservada: void
	34: ID: main
	34: (
	34: Palavra Reservada: void
	34: )
	35: {
	36: Palavra Reservada: int
	36: ID: i
	36: ;
	37: ID: i
	37: Simbolo: =
	37: Numero: 0
	37: ;
	38: Palavra Reservada: while
	38: (
	38: ID: i
	38: <
	38: Numero: 10
	38: )
	38: {
	39: ID: vet
	39: [
	39: ID: i
	39: ]
	39: Simbolo: =
	39: ID: input
	39: (
	39: )
	39: ;
	40: ID: i
	40: Simbolo: =
	40: ID: i
	40: +
	40: Numero: 1
	40: ;
	41: }
	42: ID: sort
	42: (
	42: ID: vet
	42: ,
	42: Numero: 0
	42: ,
	42: Numero: 10
	42: )
	42: ;
	43: ID: i
	43: Simbolo: =
	43: Numero: 0
	43: ;
	44: Palavra Reservada: while
	44: (
	44: ID: i
	44: <
	44: Numero: 10
	44: )
	44: {
	45: ID: output
	45: (
	45: ID: vet
	45: [
	45: ID: i
	45: ]
	45: )
	45: ;
	46: ID: i
	46: Simbolo: =
	46: ID: i
	46: +
	46: Numero: 1
	46: ;
	47: }
	48: }
	48: EOF

Árvore sintática:

  Type integer
    Variable vet
  Type integer
    Function minloc
      Type integer
        Variable a
      Type integer
        Variable low
      Type integer
        Variable high
      Type integer
        Variable i
      Type integer
        Variable x
      Type integer
        Variable k
      Assign
        Id: k
        Id: low
      Assign
        Id: x
        Vector: a
          Id: low
      Assign
        Id: i
        Operation: +
          Id: low
          Constant: 1
      While
        Operation: <
          Id: i
          Id: high
        If
          Operation: <
            Vector: a
              Id: i
            Id: x
          Assign
            Id: x
            Vector: a
              Id: i
          Assign
            Id: k
            Id: i
        Assign
          Id: i
          Operation: +
            Id: i
            Constant: 1
      Return
        Id: k
  Type void
    Function sort
      Type integer
        Variable a
      Type integer
        Variable low
      Type integer
        Variable high
      Type integer
        Variable i
      Type integer
        Variable k
      Assign
        Id: i
        Id: low
      While
        Operation: <
          Id: i
          Operation: -
            Id: high
            Constant: 1
        Type integer
          Variable t
        Assign
          Id: k
          Call to Function minloc 
            Id: a
            Id: i
            Id: high
        Assign
          Id: t
          Vector: a
            Id: k
        Assign
          Vector: a
            Id: k
          Vector: a
            Id: i
        Assign
          Vector: a
            Id: i
          Id: t
        Assign
          Id: i
          Operation: +
            Id: i
            Constant: 1
  Type void
    Function main
      Type void
      Type integer
        Variable i
      Assign
        Id: i
        Constant: 0
      While
        Operation: <
          Id: i
          Constant: 10
        Assign
          Vector: vet
            Id: i
          Call to Function input 
        Assign
          Id: i
          Operation: +
            Id: i
            Constant: 1
      Call to Function sort 
        Id: vet
        Constant: 0
        Constant: 10
      Assign
        Id: i
        Constant: 0
      While
        Operation: <
          Id: i
          Constant: 10
        Call to Function output 
          Vector: vet
            Id: i
        Assign
          Id: i
          Operation: +
            Id: i
            Constant: 1

Tabela de símbolos:

NOME          ESCOPO           TIPO_ID         TIPO_DATA         LINHAS
--------      ------------     ------------    ------------      ------------
a               minloc          variable        integer            6    9   12   13 
low             minloc          variable        integer            6    8    9   10 
vet             global          variable        integer            4 
x               minloc          variable        integer            7    9   12   13 
main            global          function        void              34 
low             sort            variable        integer           21   23 
input           main            call            -                 39 
high            sort            variable        integer           21   24   26 
k               sort            variable        integer           22   26   27   28 
a               sort            variable        integer           21   26   27   28   28   29 
vet             main            vector          integer           39   42   45 
sort            global          function        void              21 
t               sort            variable        integer           25   27   29 
k               minloc          variable        integer            7    8   14   18 
high            minloc          variable        integer            6   11 
i               main            variable        integer           36   37   38   39   40   40   43   44   45   46   46 
minloc          sort            call            -                 26 
minloc          global          function        integer            6 
sort            main            call            -                 42 
output          main            call            -                 45 
i               minloc          variable        integer            7   10   11   12   13   14   16   16 
i               sort            variable        integer           22   23   24   26   28   29   30   30 

Início da verificação de tipos

Fim da verificação de tipos
